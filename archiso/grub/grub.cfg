# Defining the Version of the ISO. This line could be easy changed by a Script wich do that automatic before creating ISO self.
# Default "GIT", because if somebody outside from the DEVs create a ISO, this ISO wouldnt have a specific Version number.
CACHYOS_VERSION="GIT"

if [ "${grub_platform}" == "efi" ]; then
	bios_or_uefi="(UEFI)!"
	else
	bios_or_uefi="(BIOS)!"
fi

# Load partition table and file system modules
insmod part_gpt
insmod part_msdos
insmod fat
insmod iso9660
insmod ntfs
insmod ntfscomp
insmod exfat
insmod udf

# Use graphics-mode output
insmod all_video
insmod font
if loadfont "${prefix}/fonts/unicode.pf2" ; then
    insmod gfxterm
    set gfxmode="auto"
    terminal_input console
    terminal_output gfxterm
fi

# Enable serial console
if serial --unit=0 --speed=115200; then
    terminal_input --append serial
    terminal_output --append serial
fi

# Search for the ISO volume
if [ -z "${ARCHISO_UUID}" ]; then
    if [ -z "${ARCHISO_HINT}" ]; then
        regexp --set=1:ARCHISO_HINT '^\(([^)]+)\)' "${cmdpath}"
    fi
    search --no-floppy --set=root --file '%ARCHISO_SEARCH_FILENAME%' --hint "${ARCHISO_HINT}"
    probe --set ARCHISO_UUID --fs-uuid "${root}"
fi

# Set default menu entry
default=cachyos
timeout=10
timeout_style=menu

# Welcome Text
menuentry "Welcome to CachyOS $CACHYOS_VERSION Live ISO $bios_or_uefi" {
insmod ext2
} 
menuentry "----------------------------------------------------" {
insmod ext2
} 


# Menu entries
menuentry "CachyOS" --class arch --class gnu-linux --class gnu --class os --id 'cachyos' {
    set gfxpayload=keep
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-cachyos archisobasedir=%INSTALL_DIR% archisodevice=UUID=${ARCHISO_UUID} cow_spacesize=10G copytoram=n module_blacklist=nvidia,nvidia_modeset,nvidia_uvm,nvidia_drm,pcspkr nouveau.modeset=1 i915.modeset=1 radeon.modeset=1 nvme_load=yes
    initrd /%INSTALL_DIR%/boot/intel-ucode.img /%INSTALL_DIR%/boot/amd-ucode.img /%INSTALL_DIR%/boot/x86_64/initramfs-linux-cachyos.img
}

menuentry "CachyOS with NVIDIA closed-source Driver (latest cards only 900+)" --class arch --class gnu-linux --class gnu --class os --id 'cachyos-nvidia' {
    set gfxpayload=keep
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-cachyos archisobasedir=%INSTALL_DIR% archisodevice=UUID=${ARCHISO_UUID} cow_spacesize=10G copytoram=n nvidia nvidia-drm.modeset=1 nouveau.modeset=0 i915.modeset=1 radeon.modeset=1 nvme_load=yes module_blacklist=pcspkr
    initrd /%INSTALL_DIR%/boot/intel-ucode.img /%INSTALL_DIR%/boot/amd-ucode.img /%INSTALL_DIR%/boot/x86_64/initramfs-linux-cachyos.img
}

menuentry "CachyOS Legacy Hardware (GPU nomodeset)" --class arch --class gnu-linux --class gnu --class os --id 'cachyos-fallback' {
    set gfxpayload=keep
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-cachyos archisobasedir=%INSTALL_DIR% archisodevice=UUID=${ARCHISO_UUID} cow_spacesize=10G copytoram=n module_blacklist=nvidia,nvidia_modeset,nvidia_uvm,nvidia_drm nomodeset nvme_load=yes
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux-cachyos.img
}

if [ "${grub_platform}" == "efi" ]; then
    if [ "${grub_cpu}" == "x86_64" ]; then
        menuentry "Run Memtest86+ (RAM test)" --class memtest86 --class memtest --class gnu --class tool {
            set gfxpayload=800x600,1024x768
            linux /boot/memtest86+/memtest.efi
        }
        menuentry "UEFI Shell" --class efi {
            insmod chain
            chainloader /shellx64.efi
        }
    elif [ "${grub_cpu}" == "i386" ]; then
        menuentry "UEFI Shell" --class efi {
            insmod chain
            chainloader /shellia32.efi
        }
    fi

    menuentry 'UEFI Firmware Settings' --id 'uefi-firmware' {
        fwsetup
    }
fi

menuentry "System shutdown" --class shutdown --class poweroff {
    echo "System shutting down..."
    halt
}

menuentry "System restart" --class reboot --class restart {
    echo "System rebooting..."
    reboot
}
